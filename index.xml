<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yet another one DevOps blog</title>
    <link>//verydevops.com/</link>
    <description>Recent content on Yet another one DevOps blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Jun 2019 10:23:00 +0700</lastBuildDate>
    
	<atom:link href="//verydevops.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Upgrade bash on mac os x</title>
      <link>//verydevops.com/blog/2019-06-14-upgrade-bash-on-mac-os-x/</link>
      <pubDate>Fri, 14 Jun 2019 10:23:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2019-06-14-upgrade-bash-on-mac-os-x/</guid>
      <description>Intro MacOS X has old 3.x bash. I found it&amp;rsquo;s very uncomfortable, as it doesn&amp;rsquo;t fit &amp;gt;4.x bash on most linux host. So you need to remember where do you want to run your scripts:
 on linux with bash &amp;gt;4.x? on mac os x with bash 3.x?  So - why not upgrade. I found comprehenisve article here: Upgrading Bash on macOS
And now:
$ bash --version GNU bash, version 5.</description>
    </item>
    
    <item>
      <title>Reopen DevOps blog</title>
      <link>//verydevops.com/blog/2019-06-10-reopen-devops-blog/</link>
      <pubDate>Mon, 10 Jun 2019 21:35:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2019-06-10-reopen-devops-blog/</guid>
      <description> About reopening  After years of laziness, I want to reopen My DevOps blog. Hugo static site generator + autobuilds with Travis CI on push to github repository. Also new domain - verydevops.com  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>//verydevops.com/about/</link>
      <pubDate>Sun, 31 Dec 2017 16:00:00 +0700</pubDate>
      
      <guid>//verydevops.com/about/</guid>
      <description> Common info  name: Konstantin Lysenko occupation: DevOps Engineers Team Lead work at: PropertyGuru Group live at: Bangkok, Thailand  Interests  Programming Traveling Meet interesting people Learning languages Snorkeling Hiking  </description>
    </item>
    
    <item>
      <title>Contacts</title>
      <link>//verydevops.com/contacts/</link>
      <pubDate>Sun, 10 Apr 2016 22:17:00 +0700</pubDate>
      
      <guid>//verydevops.com/contacts/</guid>
      <description> Messengers  email: kostiantyn@lysenko.pw skype_id: jakshi_ telegram: @jakshi line: jakshi_  </description>
    </item>
    
    <item>
      <title>Chef shortcuts</title>
      <link>//verydevops.com/blog/2014-11-21-chef-shortcuts/</link>
      <pubDate>Fri, 21 Nov 2014 13:16:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-11-21-chef-shortcuts/</guid>
      <description>Add a recipe to the end of run list on certain environment Test run, not actually add a recipe:
knife exec -E &#39;nodes.transform (&amp;quot;chef_environment:beta&amp;quot;) {|n| puts n.run_list &amp;lt;&amp;lt; &amp;quot;recipe[logentries_ng]&amp;quot; }&#39;  Add a recipe for real:
knife exec -E &#39;nodes.transform (&amp;quot;chef_environment:beta&amp;quot;) {|n| puts n.run_list &amp;lt;&amp;lt; &amp;quot;recipe[logentries_ng]&amp;quot;; n.save }&#39;  Add a recipe to the beginning of run list on certain environment Test run, not actually add a recipe:
knife exec -E &#39;nodes.</description>
    </item>
    
    <item>
      <title>Manage AWS Elastic IPs with AWS Ruby SDK</title>
      <link>//verydevops.com/blog/2014-07-14-manage-aws-elastic-ips-with-aws-ruby-sdk/</link>
      <pubDate>Mon, 14 Jul 2014 00:13:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-07-14-manage-aws-elastic-ips-with-aws-ruby-sdk/</guid>
      <description>Sometimes when you commit something nasty, you need to rewrite it. Or you may need to split commit into parts. Or whatever.
Use case: You want to remove some files that you added with your commit.
Find the commit git log --pretty=format:&#39;%h %ad | %s%d [%an]&#39; --graph --date=short  Let it be 4ca80f0.
Remove files that you don&amp;rsquo;t want in the commit. git rebase -i 4ca80f0~1  Replace pick with edit and save file.</description>
    </item>
    
    <item>
      <title>Accessing chef attributes in serverspec tests</title>
      <link>//verydevops.com/blog/2014-05-12-accessing-chef-attributes-in-serverspec-tests/</link>
      <pubDate>Mon, 12 May 2014 01:45:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-05-12-accessing-chef-attributes-in-serverspec-tests/</guid>
      <description>I presume that you are familiar with:
 Chef test-kitchen serverspec  When you write serverspec integration tests, it would be great to have access to chef attributes of cookbook that you&amp;rsquo;re testing. There&amp;rsquo;s a fast and simple way to do this.
Introduction cat attributes/default.rb  override[&#39;backup&#39;][&#39;dependencies&#39;] = [[&#39;fog&#39;],[&#39;aws-s3&#39;]]  Let&amp;rsquo;s say we want this attribute in your serverspec tests.
How can we do that?
 Dump chef attributes to JSON file with helper cookbook Load this file from serverspec tests  Dump chef attributes Create fixture cookbook emacs test/fixtures/cookbooks/test-helper/metadata.</description>
    </item>
    
    <item>
      <title>Chef cookbook templating with cookiecutter</title>
      <link>//verydevops.com/blog/2014-05-03-chef-cookbook-templating-with-cookiecutter/</link>
      <pubDate>Sat, 03 May 2014 01:21:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-05-03-chef-cookbook-templating-with-cookiecutter/</guid>
      <description>One of the challenges in chef cookbook development - create a comprehensive cookbook template.
Good cookbook template might:
 standartize your cookbooks fill them with convenient predefinitions save your time.  If you are not python averse, you could find that cookiecutter pretty useful tool for creating your cookbooks templates. This article describes my experience in creating chef cookbook template with cookiecutter.
Cookiecutter in nutshell  cookiecutter is a python based software.</description>
    </item>
    
    <item>
      <title>Backup gem and Chef</title>
      <link>//verydevops.com/blog/2014-04-24-backup-gem-and-chef/</link>
      <pubDate>Thu, 24 Apr 2014 12:48:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-04-24-backup-gem-and-chef/</guid>
      <description>Intro  There&amp;rsquo;s a nice tool for doing fast and easy backup to AWS S3: backup gem There should be done a lot of steps for setup a backup though. So it could be automated with chef. In this article I&amp;rsquo;ll write log of creation backup gem&amp;rsquo;s cookbook. Essentially this cookbook will install backup gem, that will backup /var/www folder to AWS S3 every day in 01:00. It will store last 14 backups.</description>
    </item>
    
    <item>
      <title>Rewriting your email in git commits</title>
      <link>//verydevops.com/blog/2014-01-25-rewriting-your-email-in-git-commits/</link>
      <pubDate>Sat, 25 Jan 2014 18:57:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2014-01-25-rewriting-your-email-in-git-commits/</guid>
      <description>Sometimes you need to rewrite your email in your commits in some git repository. Do it with command:
git filter-branch --env-filter &#39;if [ $GIT_AUTHOR_EMAIL = bad@email ]; then GIT_AUTHOR_EMAIL=correct@email; fi; export GIT_AUTHOR_EMAIL&#39;  For your collaborators this operatioin might be dangerous. According to Jakub Narębski collaborators will need to:
 if they didn&amp;rsquo;t base their work on history pre-rewrite, just git reset --hard origin/master or just git pull origin (which should fast-forward).</description>
    </item>
    
    <item>
      <title>Resolving &#39;nf_conntrack: table full, dropping packet&#39; messages</title>
      <link>//verydevops.com/blog/2013-06-16-resolving-nf_conntrack-table-full-dropping-packet-messages/</link>
      <pubDate>Sun, 16 Jun 2013 13:55:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2013-06-16-resolving-nf_conntrack-table-full-dropping-packet-messages/</guid>
      <description>Just a quick note:
Good article about Resolving “nf_conntrack: table full, dropping packet.” flood message in dmesg Linux kernel log</description>
    </item>
    
    <item>
      <title>Manage AWS Elastic IPs with AWS Ruby SDK</title>
      <link>//verydevops.com/blog/2013-06-07-manage-aws-elastic-ips-with-aws-ruby-sdk/</link>
      <pubDate>Fri, 07 Jun 2013 13:48:00 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2013-06-07-manage-aws-elastic-ips-with-aws-ruby-sdk/</guid>
      <description>I tried three ruby libs for managing Elastic IPs for AWS EC2.
 fog right_aws Official Ruby AWS SDK.  I wholeheartedly recommend Official AWS Ruby SDK, as most simple and easy to use. I also insert several examples of assigning Elastic IPs with AWS Ruby SDK:
Connect to AWS API with AWS Ruby SDK. c = AWS::EC2.new(:access_key_id =&amp;gt; &amp;quot;AWS_access_key&amp;quot;, :secret_access_key =&amp;gt; &amp;quot;AWS_secret_key&amp;quot;, :region =&amp;gt; &amp;quot;us-east-1&amp;quot;)  Associate Elastic IP x.</description>
    </item>
    
    <item>
      <title>Manage AWS Elastic IPs with fog</title>
      <link>//verydevops.com/blog/2013-06-03-manage-aws-elastic-ips-with-fog/</link>
      <pubDate>Mon, 03 Jun 2013 19:25:54 +0700</pubDate>
      
      <guid>//verydevops.com/blog/2013-06-03-manage-aws-elastic-ips-with-fog/</guid>
      <description>Connect to AWS API with fog. require &#39;fog&#39; c = Fog::Compute.new( :provider =&amp;gt; &#39;AWS&#39;, :aws_access_key_id =&amp;gt; &#39;Your AWS access key&#39;, :aws_secret_access_key =&amp;gt; &#39;Your AWS secret key&#39;, :region =&amp;gt; &#39;us-east-1&#39; )  Associate Elastic IP eip = c.addresses.get(&#39;Your elastic IP address&#39;) c.associate_address(&amp;quot;Your instance id&amp;quot;,nil,nil,eip.allocation_id)  Disassociate Elastic IP eip = c.describe_addresses(&#39;public-ip&#39; =&amp;gt; [&#39;Your elastic IP address&#39;]) disassociate_address(nil,eip[:body][&amp;quot;addressesSet&amp;quot;][0][&amp;quot;associationId&amp;quot;])  Association Elastic IP script example. assign_eip.rb:
#!/usr/bin/ruby # This is a script that assign Elastic IP to current instance.</description>
    </item>
    
  </channel>
</rss>